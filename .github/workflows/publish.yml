# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker image

on:
  schedule:
    - cron: '45 17 * * *'
  push:
    branches: [ "*" ]

jobs:
  push_to_registry:
    name: Push to Docker Hub
    strategy:
      fail-fast: false
      matrix:
        php_version: [7.4, 8.1, 8.2, 8.3, 8.4]
        web_server: ["", "-apache"]
        os_version: ["", "-bullseye", "-bookworm"]
        exclude:
          - php_version: 7.4
            os_version: "-bookworm"
    runs-on: ubuntu-latest
    #runs-on: [self-hosted, linux, x64]
    #runs-on: [linux, x64]
    steps:
      - name: Set env variables base_image_name, image_name, latest_image_name, latest_php_version
        run: |
          echo "base_image_name=library/php:${{ matrix.php_version }}${{ matrix.web_server }}${{ matrix.os_version }}" >> $GITHUB_ENV
          echo "image_name=${{ secrets.DOCKER_USERNAME }}/php:${{ matrix.php_version }}${{ matrix.web_server }}${{ matrix.os_version }}" >> $GITHUB_ENV
          echo "latest_image_name=${{ secrets.DOCKER_USERNAME }}/php:latest" >> $GITHUB_ENV
          echo "latest_php_version=8.2" >> $GITHUB_ENV

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Check if original image update is available
        id: base_image_update_check
        if: github.event_name == 'schedule'
        uses: lucacome/docker-image-update-checker@v1
        with:
          base-image: ${{ env.base_image_name }}
          image: ${{ env.image_name }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        if: ( github.event_name != 'schedule' || steps.base_image_update_check.outputs.needs-updating == 'true' )
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image 1.2
        uses: docker/build-push-action@v3
        if: ( github.event_name != 'schedule' || steps.base_image_update_check.outputs.needs-updating == 'true' )
        with:
          context: .
          push: ${{ github.ref_name == 'main' }}
          build-args: PHP_IMAGE=${{ env.base_image_name }}
          tags: |
            ${{ env.image_name }}-1.2
          target: v1_2

      - name: Build and push Docker image 1.3
        uses: docker/build-push-action@v3
        if: ( github.event_name != 'schedule' || steps.base_image_update_check.outputs.needs-updating == 'true' )
        with:
          context: .
          push: ${{ github.ref_name == 'main' }}
          build-args: PHP_IMAGE=${{ env.base_image_name }}
          tags: |
            ${{ env.image_name }}-1.3
            ${{ env.image_name }}-1
          target: v1_3

      - name: Build and push Docker image 2.0
        uses: docker/build-push-action@v3
        if: ( github.event_name != 'schedule' || steps.base_image_update_check.outputs.needs-updating == 'true' )
        with:
          context: .
          push: ${{ github.ref_name == 'main' }}
          build-args: PHP_IMAGE=${{ env.base_image_name }}
          tags: |
            ${{ env.image_name }}-2.0
          target: v2_0

      - name: Build and push Docker image 2.1
        uses: docker/build-push-action@v3
        if: ( github.event_name != 'schedule' || steps.base_image_update_check.outputs.needs-updating == 'true' )
        with:
          context: .
          push: ${{ github.ref_name == 'main' }}
          build-args: PHP_IMAGE=${{ env.base_image_name }}
          tags: |
            ${{ env.image_name }}-2.1
            ${{ env.image_name }}-2
            ${{ env.image_name }}
          target: v2_1

      - name: Build and push Docker image latest
        uses: docker/build-push-action@v3
        if: ( github.event_name != 'schedule' || steps.base_image_update_check.outputs.needs-updating == 'true' ) && matrix.php_version == env.latest_php_version && matrix.web_server == '' && matrix.os_version == ''
        with:
          context: .
          push: ${{ github.ref_name == 'main' }}
          build-args: PHP_IMAGE=${{ env.base_image_name }}
          tags: ${{ env.latest_image_name }}
          target: latest
